ls //muestra carpetas
ls -al //muestra todo con ocultos

mkdir // crea carpetas
touch vacio.txt

history muestra historial de comandos

cat textoVacio.txt

rm vacio.txt // borra archivo

git init

git status

git add "texto practica.txt" //va siempre antes del commit, "" por si el nombre del txt tiene espacios
git rm "texto practica.txt" // remover el archivo

git commit -m "primer commit de texto practica"

git config --global user.name "wernher"
git config --global user.email "wernher@etc" // esos para q se pueda hacer el commit, le dices quien hizo el 												commit
git add . //add a todo luego commit

git log "texto practica.txt" //para ver la historia del archivo (todos sus commit), lo carga desde el mas reciente
git log --stat

git show "texto practica.txt" //muestra los cambios q hubieron sobre un archivo, muestra el ultimo commit, el antes con un - y el nuevo cambio con un +

git diff el_num_del_commit el_num_delOtroCommit //compara los commit

git reset 8e82b0b14dac98d206d7b3ffe741123758196713 --hard //regresa a ese commit, borrando todo lo posterior
git reset 8e82b0b14dac98d206d7b3ffe741123758196713 --soft

git checkout 8e82b0b14dac98d206d7b3ffe741123758196713 "texto practica.txt" // trae el archivo de ese commit a  		esa version, si se hace commit, lo modifica
git checkout master "texto practica.txt" //trae el de master solo afectan a ese archivo

git commit -am "mensaje del commit etc"//hace el git add de los cambios, solo funcina con archivos a los que se hicieron add antes

git branch cabecera //crea la cabecera, pero no se mueve a ella
git checkout cabecera //se mueve a otra rama
